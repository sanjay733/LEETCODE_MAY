class Solution {
    static int LCS(int i,int j,int[] nums1,int[] nums2,int[][] dp){
        if(i>=nums1.length || j>=nums2.length) return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        if(nums1[i]==nums2[j]) return dp[i][j] = 1 + LCS(i+1,j+1,nums1,nums2,dp);
        return dp[i][j]= Math.max(LCS(i+1,j,nums1,nums2,dp),LCS(i,j+1,nums1,nums2,dp));

    }
    public int maxUncrossedLines(int[] nums1, int[] nums2) {
        int n = nums1.length;
        int m = nums2.length;

        int[][] dp = new int[n+1][m+1];
        for(int[] row : dp){
            Arrays.fill(row,-1);
        }
        return LCS(0,0,nums1,nums2,dp);
    }
}