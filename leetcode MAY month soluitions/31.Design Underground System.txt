class UndergroundSystem {

    HashMap<String, List<Integer>> avgTimes;
    HashMap<Integer, List<String>> checkInTimes;

    public UndergroundSystem() {
        this.avgTimes = new HashMap<>();
        this.checkInTimes = new HashMap<Integer, List<String>>();
        
    }
    
    public void checkIn(int id, String stationName, int t) {

        String [] val = new String[]{stationName,Integer.toString(t)};

        checkInTimes.put(id,Arrays.asList(val));
        
    }
    
    public void checkOut(int id, String stationName, int t) {
        List<String> val = checkInTimes.get(id);
        String startStation = val.get(0);
        int startTime = Integer.valueOf(val.get(1));

        String key = startStation+"-"+stationName;
        List<Integer> avg = avgTimes.get(key);
        if(avg!=null){
            avg.add(t-startTime);
            avgTimes.put(key,avg);
        }else{
            List<Integer> v = new ArrayList<>();
            v.add(t-startTime);
            avgTimes.put(key, v);
        }
        checkInTimes.remove(id);

    }
    
    public double getAverageTime(String startStation, String endStation) {
        List<Integer> val = avgTimes.get(startStation+"-"+endStation);
        int no = 0;
        int sum = 0;
        for(int i=0;i<val.size(); i++){
            sum += val.get(i);
            no++;
        }
        return (double)sum/no;
    }
}

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem obj = new UndergroundSystem();
 * obj.checkIn(id,stationName,t);
 * obj.checkOut(id,stationName,t);
 * double param_3 = obj.getAverageTime(startStation,endStation);
 */